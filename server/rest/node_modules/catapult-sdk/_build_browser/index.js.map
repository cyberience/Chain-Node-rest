{"version":3,"sources":["../src/index.js"],"names":["auth","require","createKeyPairFromPrivateKeyString","sign","verify","merkle","sha3Hasher","address","EntityType","idReducer","ModelType","networkInfo","status","serialize","sizes","transactionExtensions","packetHeader","PacketType","BinaryParser","PacketParser","catapultModelSystem","BinarySerializer","SerializedSizeCalculator","arrayUtils","base32","convert","formattingUtils","future","objects","schemaFormatter","SchemaType","uint64","catapultSdk","constants","crypto","model","modelBinary","packet","header","parser","plugins","serializer","utils","array","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMA,OAAOC,QAAQ,aAAR,CAAb;;eAC4DA,QAAQ,kBAAR,C;IAApDC,iC,YAAAA,iC;IAAmCC,I,YAAAA,I;IAAMC,M,YAAAA,M;;AACjD,IAAMC,SAASJ,QAAQ,2BAAR,CAAf;AACA,IAAMK,aAAaL,QAAQ,qBAAR,CAAnB;AACA,IAAMM,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,oBAAR,CAAnB;AACA,IAAMQ,YAAYR,QAAQ,mBAAR,CAAlB;AACA,IAAMS,YAAYT,QAAQ,mBAAR,CAAlB;AACA,IAAMU,cAAcV,QAAQ,qBAAR,CAApB;AACA,IAAMW,SAASX,QAAQ,gBAAR,CAAf;AACA,IAAMY,YAAYZ,QAAQ,yBAAR,CAAlB;AACA,IAAMa,QAAQb,QAAQ,qBAAR,CAAd;AACA,IAAMc,wBAAwBd,QAAQ,qCAAR,CAA9B;AACA,IAAMe,eAAef,QAAQ,iBAAR,CAArB;AACA,IAAMgB,aAAahB,QAAQ,qBAAR,CAAnB;AACA,IAAMiB,eAAejB,QAAQ,uBAAR,CAArB;AACA,IAAMkB,eAAelB,QAAQ,uBAAR,CAArB;AACA,IAAMmB,sBAAsBnB,QAAQ,+BAAR,CAA5B;AACA,IAAMoB,mBAAmBpB,QAAQ,+BAAR,CAAzB;AACA,IAAMqB,2BAA2BrB,QAAQ,uCAAR,CAAjC;AACA,IAAMsB,aAAatB,QAAQ,oBAAR,CAAnB;AACA,IAAMuB,SAASvB,QAAQ,gBAAR,CAAf;AACA,IAAMwB,UAAUxB,QAAQ,iBAAR,CAAhB;AACA,IAAMyB,kBAAkBzB,QAAQ,yBAAR,CAAxB;AACA,IAAM0B,SAAS1B,QAAQ,gBAAR,CAAf;AACA,IAAM2B,UAAU3B,QAAQ,iBAAR,CAAhB;AACA,IAAM4B,kBAAkB5B,QAAQ,yBAAR,CAAxB;AACA,IAAM6B,aAAa7B,QAAQ,oBAAR,CAAnB;AACA,IAAM8B,SAAS9B,QAAQ,gBAAR,CAAf;;AAEA,IAAM+B,cAAc;AACnBhC,WADmB;AAEnBiC,YAAW;AACVnB;AADU,EAFQ;AAKnBoB,SAAQ;AACPhC,sEADO;AAEPG,gBAFO;AAGPC,wBAHO;AAIPH,YAJO;AAKPC;AALO,EALW;AAYnB+B,QAAO;AACN5B,kBADM;AAENC,wBAFM;AAGNC,sBAHM;AAINC,sBAJM;AAKNC,0BALM;AAMNC;AANM,EAZY;AAoBnBwB,cAAa;AACZvB,sBADY;AAEZE;AAFY,EApBM;AAwBnBsB,SAAQ;AACPC,UAAQtB,YADD;AAEPC;AAFO,EAxBW;AA4BnBsB,SAAQ;AACPrB,4BADO;AAEPC;AAFO,EA5BW;AAgCnBqB,UAAS;AACRpB;AADQ,EAhCU;AAmCnBqB,aAAY;AACXpB,oCADW;AAEXC;AAFW,EAnCO;AAuCnBoB,QAAO;AACNC,SAAOpB,UADD;AAENC,gBAFM;AAGNC,kBAHM;AAINC,kCAJM;AAKNC,gBALM;AAMNC,kBANM;AAONC,kCAPM;AAQNC,wBARM;AASNC;AATM;AAvCY,CAApB;;AAoDAa,OAAOC,OAAP,GAAiBb,WAAjB","file":"index.js","sourcesContent":["/*\n * Copyright (c) 2016-present,\n * Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.\n *\n * This file is part of Catapult.\n *\n * Catapult is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Catapult is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Catapult.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nconst auth = require('./auth/auth');\nconst { createKeyPairFromPrivateKeyString, sign, verify } = require('./crypto/keyPair');\nconst merkle = require('./crypto/merkleAuditProof');\nconst sha3Hasher = require('./crypto/sha3Hasher');\nconst address = require('./model/address');\nconst EntityType = require('./model/EntityType');\nconst idReducer = require('./model/idReducer');\nconst ModelType = require('./model/ModelType');\nconst networkInfo = require('./model/networkInfo');\nconst status = require('./model/status');\nconst serialize = require('./modelBinary/serialize');\nconst sizes = require('./modelBinary/sizes');\nconst transactionExtensions = require('./modelBinary/transactionExtensions');\nconst packetHeader = require('./packet/header');\nconst PacketType = require('./packet/PacketType');\nconst BinaryParser = require('./parser/BinaryParser');\nconst PacketParser = require('./parser/PacketParser');\nconst catapultModelSystem = require('./plugins/catapultModelSystem');\nconst BinarySerializer = require('./serializer/BinarySerializer');\nconst SerializedSizeCalculator = require('./serializer/SerializedSizeCalculator');\nconst arrayUtils = require('./utils/arrayUtils');\nconst base32 = require('./utils/base32');\nconst convert = require('./utils/convert');\nconst formattingUtils = require('./utils/formattingUtils');\nconst future = require('./utils/future');\nconst objects = require('./utils/objects');\nconst schemaFormatter = require('./utils/schemaFormatter');\nconst SchemaType = require('./utils/SchemaType');\nconst uint64 = require('./utils/uint64');\n\nconst catapultSdk = {\n\tauth,\n\tconstants: {\n\t\tsizes\n\t},\n\tcrypto: {\n\t\tcreateKeyPairFromPrivateKeyString,\n\t\tmerkle,\n\t\tsha3Hasher,\n\t\tsign,\n\t\tverify\n\t},\n\tmodel: {\n\t\taddress,\n\t\tEntityType,\n\t\tidReducer,\n\t\tModelType,\n\t\tnetworkInfo,\n\t\tstatus\n\t},\n\tmodelBinary: {\n\t\tserialize,\n\t\ttransactionExtensions\n\t},\n\tpacket: {\n\t\theader: packetHeader,\n\t\tPacketType\n\t},\n\tparser: {\n\t\tBinaryParser,\n\t\tPacketParser\n\t},\n\tplugins: {\n\t\tcatapultModelSystem\n\t},\n\tserializer: {\n\t\tBinarySerializer,\n\t\tSerializedSizeCalculator\n\t},\n\tutils: {\n\t\tarray: arrayUtils,\n\t\tbase32,\n\t\tconvert,\n\t\tformattingUtils,\n\t\tfuture,\n\t\tobjects,\n\t\tschemaFormatter,\n\t\tSchemaType,\n\t\tuint64\n\t}\n};\n\nmodule.exports = catapultSdk;\n"]}