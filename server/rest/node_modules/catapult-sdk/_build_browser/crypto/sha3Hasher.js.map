{"version":3,"sources":["../../src/crypto/sha3Hasher.js"],"names":["require","sha3_256","sha3_512","arrayUtils","convert","getHasher","length","sha3Hasher","func","dest","data","hasher","hash","arrayBuffer","copy","uint8View","createHasher","reset","create","update","Uint8Array","hexToUint8","Error","finalize","result","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;eAC+BA,QAAQ,SAAR,C;IAAvBC,Q,YAAAA,Q;IAAUC,Q,YAAAA,Q;;AAClB,IAAMC,aAAaH,QAAQ,qBAAR,CAAnB;AACA,IAAMI,UAAUJ,QAAQ,kBAAR,CAAhB;;AAEA,IAAMK,YAAY,SAAZA,SAAY;AAAA,KAACC,MAAD,uEAAU,EAAV;AAAA,QAAkB,EAAE,IAAIL,QAAN,EAAgB,IAAIC,QAApB,GAA+BI,MAA/B,CAAlB;AAAA,CAAlB;;AAEA,IAAMC,aAAa;AAClB;;;;;;AAMAC,OAAM,cAACC,IAAD,EAAOC,IAAP,EAAaJ,MAAb,EAAwB;AAC7B,MAAMK,SAASN,UAAUC,MAAV,CAAf;AACA,MAAMM,OAAOD,OAAOE,WAAP,CAAmBH,IAAnB,CAAb;AACAP,aAAWW,IAAX,CAAgBL,IAAhB,EAAsBN,WAAWY,SAAX,CAAqBH,IAArB,CAAtB;AACA,EAXiB;;AAalB;;;;;AAKAI,eAAc,8BAAU;AACvB,MAAIJ,aAAJ;AACA,SAAO;AACNK,UAAO,iBAAM;AACZL,WAAOP,UAAUC,MAAV,EAAkBY,MAAlB,EAAP;AACA,IAHK;AAINC,WAAQ,sBAAQ;AACf,QAAIT,gBAAgBU,UAApB,EACCR,KAAKO,MAAL,CAAYT,IAAZ,EADD,KAEK,IAAI,aAAa,OAAOA,IAAxB,EACJE,KAAKO,MAAL,CAAYf,QAAQiB,UAAR,CAAmBX,IAAnB,CAAZ,EADI,KAGJ,MAAMY,MAAM,uBAAN,CAAN;AACD,IAXK;AAYNC,aAAU,0BAAU;AACnBpB,eAAWW,IAAX,CAAgBU,MAAhB,EAAwBrB,WAAWY,SAAX,CAAqBH,KAAKC,WAAL,EAArB,CAAxB;AACA;AAdK,GAAP;AAgBA;AApCiB,CAAnB;;AAuCAY,OAAOC,OAAP,GAAiBnB,UAAjB","file":"sha3Hasher.js","sourcesContent":["/*\n * Copyright (c) 2016-present,\n * Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.\n *\n * This file is part of Catapult.\n *\n * Catapult is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Catapult is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Catapult.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module crypto/sha3Hasher */\nconst { sha3_256, sha3_512 } = require('js-sha3');\nconst arrayUtils = require('../utils/arrayUtils');\nconst convert = require('../utils/convert');\n\nconst getHasher = (length = 64) => ({ 32: sha3_256, 64: sha3_512 }[length]);\n\nconst sha3Hasher = {\n\t/**\n\t * Calculates the hash of data.\n\t * @param {Uint8Array} dest The computed hash destination.\n\t * @param {Uint8Array} data The data to hash.\n\t * @param {numeric} length The hash length in bytes.\n\t */\n\tfunc: (dest, data, length) => {\n\t\tconst hasher = getHasher(length);\n\t\tconst hash = hasher.arrayBuffer(data);\n\t\tarrayUtils.copy(dest, arrayUtils.uint8View(hash));\n\t},\n\n\t/**\n\t * Creates a hasher object.\n\t * @param {numeric} length The hash length in bytes.\n\t * @returns {object} The hasher.\n\t */\n\tcreateHasher: length => {\n\t\tlet hash;\n\t\treturn {\n\t\t\treset: () => {\n\t\t\t\thash = getHasher(length).create();\n\t\t\t},\n\t\t\tupdate: data => {\n\t\t\t\tif (data instanceof Uint8Array)\n\t\t\t\t\thash.update(data);\n\t\t\t\telse if ('string' === typeof data)\n\t\t\t\t\thash.update(convert.hexToUint8(data));\n\t\t\t\telse\n\t\t\t\t\tthrow Error('unsupported data type');\n\t\t\t},\n\t\t\tfinalize: result => {\n\t\t\t\tarrayUtils.copy(result, arrayUtils.uint8View(hash.arrayBuffer()));\n\t\t\t}\n\t\t};\n\t}\n};\n\nmodule.exports = sha3Hasher;\n"]}