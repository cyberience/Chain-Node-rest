{"version":3,"sources":["../../src/auth/challengeParser.js"],"names":["PacketType","require","headerInfos","server","type","serverChallenge","size","client","clientChallenge","isPacketHeaderValid","packet","packetTypeName","headerInfo","challengeParser","tryParseServerChallengeRequest","undefined","challenge","payload","tryParseClientChallengeResponse","signature","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA,IAAMA,aAAaC,QAAQ,sBAAR,CAAnB;;AAEA,IAAMC,cAAc;AACnBC,SAAQ,EAAEC,MAAMJ,WAAWK,eAAnB,EAAoCC,MAAM,EAA1C,EADW;AAEnBC,SAAQ,EAAEH,MAAMJ,WAAWQ,eAAnB,EAAoCF,MAAM,EAA1C;AAFW,CAApB;;AAKA,IAAMG,sBAAsB,SAAtBA,mBAAsB,CAACC,MAAD,EAASC,cAAT,EAA4B;AACvD,KAAMC,aAAaV,YAAYS,cAAZ,CAAnB;AACA,QAAOD,OAAON,IAAP,KAAgBQ,WAAWR,IAA3B,IAAmCM,OAAOJ,IAAP,KAAgBM,WAAWN,IAArE;AACA,CAHD;;AAKA,IAAMO,kBAAkB;AACvB;;;;;AAKAC,iCAAgC,gDAAU;AACzC,MAAI,CAACL,oBAAoBC,MAApB,EAA4B,QAA5B,CAAL,EACC,OAAOK,SAAP;;AAED,SAAO;AACNX,SAAMM,OAAON,IADP;AAENY,cAAWN,OAAOO;AAFZ,GAAP;AAIA,EAdsB;;AAgBvB;;;;;AAKAC,kCAAiC,iDAAU;AAC1C,MAAI,CAACT,oBAAoBC,MAApB,EAA4B,QAA5B,CAAL,EACC,OAAOK,SAAP;;AAED,SAAO;AACNX,SAAMM,OAAON,IADP;AAENe,cAAWT,OAAOO;AAFZ,GAAP;AAIA;AA7BsB,CAAxB;;AAgCAG,OAAOC,OAAP,GAAiBR,eAAjB","file":"challengeParser.js","sourcesContent":["/*\n * Copyright (c) 2016-present,\n * Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.\n *\n * This file is part of Catapult.\n *\n * Catapult is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Catapult is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Catapult.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module auth/challengeParser */\nconst PacketType = require('../packet/PacketType');\n\nconst headerInfos = {\n\tserver: { type: PacketType.serverChallenge, size: 72 },\n\tclient: { type: PacketType.clientChallenge, size: 72 }\n};\n\nconst isPacketHeaderValid = (packet, packetTypeName) => {\n\tconst headerInfo = headerInfos[packetTypeName];\n\treturn packet.type === headerInfo.type && packet.size === headerInfo.size;\n};\n\nconst challengeParser = {\n\t/**\n\t * Tries to parse a server challenge request packet.\n\t * @param {module:parser/PacketParser~RawPacket} packet The raw packet to parse.\n\t * @returns {object} The parsed packet or undefined.\n\t */\n\ttryParseServerChallengeRequest: packet => {\n\t\tif (!isPacketHeaderValid(packet, 'server'))\n\t\t\treturn undefined;\n\n\t\treturn {\n\t\t\ttype: packet.type,\n\t\t\tchallenge: packet.payload\n\t\t};\n\t},\n\n\t/**\n\t * Tries to parse a client challenge request packet.\n\t * @param {module:parser/PacketParser~RawPacket} packet The raw packet to parse.\n\t * @returns {object} The parsed packet or undefined.\n\t */\n\ttryParseClientChallengeResponse: packet => {\n\t\tif (!isPacketHeaderValid(packet, 'client'))\n\t\t\treturn undefined;\n\n\t\treturn {\n\t\t\ttype: packet.type,\n\t\t\tsignature: packet.payload\n\t\t};\n\t}\n};\n\nmodule.exports = challengeParser;\n"]}