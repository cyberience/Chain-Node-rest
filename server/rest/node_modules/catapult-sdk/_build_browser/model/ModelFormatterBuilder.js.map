{"version":3,"sources":["../../src/model/ModelFormatterBuilder.js"],"names":["schemaFormatter","require","createFormatter","type","modelSchema","formattingRules","format","entity","ModelFormatterBuilder","subFormatterTypes","Set","has","Error","add","formatter","forEach","module","exports"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA,IAAMA,kBAAkBC,QAAQ,0BAAR,CAAxB;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,WAAP,EAAoBC,eAApB;AAAA,QAAyC;AAChEC,UAAQ;AAAA,UAAUN,gBAAgBM,MAAhB,CAAuBC,MAAvB,EAA+BH,YAAYD,IAAZ,CAA/B,EAAkDC,WAAlD,EAA+DC,eAA/D,CAAV;AAAA;AADwD,EAAzC;AAAA,CAAxB;;AAIA;;;;IAGMG,qB;AACL;;;AAGA,kCAAc;AAAA;;AACb,OAAKC,iBAAL,GAAyB,IAAIC,GAAJ,CAAQ,CAChC,qBADgC,EAEhC,yBAFgC,EAGhC,yBAHgC,EAKhC,WALgC,EAMhC,iBANgC,EAOhC,UAPgC,EAQhC,UARgC,EAShC,aATgC,EAUhC,mBAVgC,CAAR,CAAzB;AAYA;;AAED;;;;;;;;+BAIaP,I,EAAM;AAClB,OAAI,KAAKM,iBAAL,CAAuBE,GAAvB,CAA2BR,IAA3B,CAAJ,EACC,MAAMS,8CAA2CT,IAA3C,QAAN;;AAED,QAAKM,iBAAL,CAAuBI,GAAvB,CAA2BV,IAA3B;AACA;;AAED;;;;;;;;;wBAMMC,W,EAAaC,e,EAAiB;AACnC,OAAMS,YAAY,EAAlB;AACA,QAAKL,iBAAL,CAAuBM,OAAvB,CAA+B,gBAAQ;AACtCD,cAAUX,IAAV,IAAkBD,gBAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,eAAnC,CAAlB;AACA,IAFD;;AAIA,UAAOS,SAAP;AACA;;;;;;AAGFE,OAAOC,OAAP,GAAiBT,qBAAjB","file":"ModelFormatterBuilder.js","sourcesContent":["/*\n * Copyright (c) 2016-present,\n * Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.\n *\n * This file is part of Catapult.\n *\n * Catapult is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Catapult is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Catapult.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module model/ModelFormatterBuilder */\nconst schemaFormatter = require('../utils/schemaFormatter');\n\nconst createFormatter = (type, modelSchema, formattingRules) => ({\n\tformat: entity => schemaFormatter.format(entity, modelSchema[type], modelSchema, formattingRules)\n});\n\n/**\n * Builder for creating a model formatter.\n */\nclass ModelFormatterBuilder {\n\t/**\n\t * Creates a model formatter builder.\n\t */\n\tconstructor() {\n\t\tthis.subFormatterTypes = new Set([\n\t\t\t'accountWithMetadata',\n\t\t\t'blockHeaderWithMetadata',\n\t\t\t'transactionWithMetadata',\n\n\t\t\t'chainInfo',\n\t\t\t'merkleProofInfo',\n\t\t\t'nodeInfo',\n\t\t\t'nodeTime',\n\t\t\t'storageInfo',\n\t\t\t'transactionStatus'\n\t\t]);\n\t}\n\n\t/**\n\t * Adds support for a named formatter.\n\t * @param {string} type The formatter type.\n\t */\n\taddFormatter(type) {\n\t\tif (this.subFormatterTypes.has(type))\n\t\t\tthrow Error(`formatter already registered for '${type}'`);\n\n\t\tthis.subFormatterTypes.add(type);\n\t}\n\n\t/**\n\t * Returns an appropriate aggregate formatter object.\n\t * @param {object} modelSchema The model schema.\n\t * @param {object} formattingRules A map for looking up formatting rules given a schema property type.\n\t * @returns {object} The aggregate formatter object.\n\t */\n\tbuild(modelSchema, formattingRules) {\n\t\tconst formatter = {};\n\t\tthis.subFormatterTypes.forEach(type => {\n\t\t\tformatter[type] = createFormatter(type, modelSchema, formattingRules);\n\t\t});\n\n\t\treturn formatter;\n\t}\n}\n\nmodule.exports = ModelFormatterBuilder;\n"]}